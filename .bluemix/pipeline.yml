---
stages:
- name: Assembly
  inputs:
  - type: git
    branch: master
  triggers:
  - type: commit
  jobs:
  - name: Self-Assembly
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |-
      #!/bin/bash
      echo "Setting up Piwik for initial deployment"
      echo "Updating apt-get ..."
      sudo apt-get update > /dev/null 2>&1

      echo "Installing deployment dependencies"
      echo "   Installing jq for JSON parsing ..."
      sudo apt-get --assume-yes install jq > /dev/null 2>&1
      echo "   Installing zip/unzip ..."
      sudo apt-get --assume-yes install zip unzip > /dev/null 2>&1

      echo "Reading config.json"
      PIWIKVERSION=$(jq -r '.["piwik-version"]' < ./bluezone/config.json)
      PIWIKURL=$(jq -r '.["piwik-url"]' < ./bluezone/config.json)

      echo "Fetching Piwik" $PIWIKVERSION "..."
      wget $PIWIKURL -nv -O ./bluezone/piwik.zip
      echo "Extracting Piwik..."
      unzip -o ./bluezone/piwik.zip -d . > /dev/null 2>&1

      echo "Fetching Piwik plugins"
      jq -r '.plugins[]' < ./bluezone/config.json | while read plugin; do
        wget $plugin -nv -O ./bluezone/TempPlugin.zip
        unzip -o ./bluezone/TempPlugin.zip -d ./piwik/plugins > /dev/null 2>&1
        rm -f ./bluezone/TempPlugin.zip
      done

      echo "Setting up user provided plugins ..."
      for f in ./bluezone/custom-plugins; do
        if [ -d ${f} ]; then
            # Will not run if no directories are available
            echo "Installing ${f} User-Provided Plugin ..."
            mv $f ./piwik/plugins
        else
            echo "No User-Provided Plugins detected ..."
        fi
      done

      echo "Setting up unicode font support ..."
      wget http://piwik.org/wp-content/uploads/unifont.ttf.zip -nv -O ./bluezone/unifont.ttf.zip
      unzip -o ./bluezone/unifont.ttf.zip -d ./piwik/plugins/ImageGraph/fonts > /dev/null 2>&1

      echo "Making artifacts CF PHP Buildpack friendly ..."
      mv ./bluezone/configtweaks/.bp-config .
      rm -f ./piwik/composer.json
      rm -f ./piwik/composer.lock

      echo "Patching Piwik artifacts"
      mv ./bluezone/configtweaks/bootstrap.php ./piwik
      mv ./bluezone/configtweaks/.user.ini ./piwik
      mv ./bluezone/apptweaks/FormDatabaseSetup.php ./piwik/plugins/Installation
      mv ./bluezone/apptweaks/Controller.php ./piwik/plugins/Installation
      mv ./bluezone/apptweaks/upgrade.php ./piwik/libs/upgradephp

      # Embed config file if provided
      if [ -f "./bluezone/configtweaks/config.ini.php" ]
      then
       echo "Piwik Config file detected. Applying ..."
       mv ./bluezone/configtweaks/config.ini.php ./piwik/config
      fi

      # Cleaning up
      echo -e "Cleaning up repository ..."
      rm -rf ./bluezone
      rm -rf .bluemix

      echo "Your Piwik Assembly present is complete."
- name: Deployment
  inputs:
  - type: job
    stage: Assembly
    job: Self-Assembly
  triggers:
  - type: stage
  jobs:
  - name: Deploy
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}

      cf push "${CF_APP}"
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: https://devops-api.ng.bluemix.net/v1/messaging/webhook/publish
